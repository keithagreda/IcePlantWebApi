//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

/* tslint:disable */
/* eslint-disable */
// ReSharper disable InconsistentNaming



export interface ApiResponseOfPaginatedResultOfCustomerDropDownDto {
    data: PaginatedResultOfCustomerDropDownDto;
    message?: string;
    isSuccess?: boolean;
    errors?: string[];
}

export interface PaginatedResultOfCustomerDropDownDto {
    items?: CustomerDropDownDto[];
    totalCount?: number;
    totalPages?: number;
    currentPage?: number;
    pageSize?: number;
}

export interface CustomerDropDownDto {
    id?: string;
    customerFullName?: string;
}

export interface ApiResponseOfPaginatedResultOfEntityHistoryDto {
    data: PaginatedResultOfEntityHistoryDto;
    message?: string;
    isSuccess?: boolean;
    errors?: string[];
}

export interface PaginatedResultOfEntityHistoryDto {
    items?: EntityHistoryDto[];
    totalCount?: number;
    totalPages?: number;
    currentPage?: number;
    pageSize?: number;
}

export interface EntityHistoryDto {
    entityName?: string;
    changes?: string;
    changeTime?: string;
    changedBy?: string;
    action?: string;
}

export interface ApiResponseOfListOfCurrentInventoryDto {
    data: CurrentInventoryDto[];
    message?: string;
    isSuccess?: boolean;
    errors?: string[];
}

export interface CurrentInventoryDto {
    productName?: string | undefined;
    receivedQty?: number;
    salesQty?: number;
    begQty?: number;
    reconciliationQty?: number;
    currentStocks?: number;
    productId?: number;
}

export interface ApiResponseOfPaginatedResultOfGetInventoryDto {
    data: PaginatedResultOfGetInventoryDto;
    message?: string;
    isSuccess?: boolean;
    errors?: string[];
}

export interface PaginatedResultOfGetInventoryDto {
    items?: GetInventoryDto[];
    totalCount?: number;
    totalPages?: number;
    currentPage?: number;
    pageSize?: number;
}

export interface GetInventoryDto {
    inventoryId?: string | undefined;
    productId?: number;
    productName?: string | undefined;
    begQty?: number;
    receivedQty?: number;
    reconcilliationQty?: number;
    salesQty?: number;
    inventoryBegTime?: Date | undefined;
    inventoryEndTime?: Date | undefined;
}

export interface ApiResponseOfPaginatedResultOfGetStockCardDayDto {
    data: PaginatedResultOfGetStockCardDayDto;
    message?: string;
    isSuccess?: boolean;
    errors?: string[];
}

export interface PaginatedResultOfGetStockCardDayDto {
    items?: GetStockCardDayDto[];
    totalCount?: number;
    totalPages?: number;
    currentPage?: number;
    pageSize?: number;
}

export interface GetStockCardDayDto {
    inventoryId?: string;
    dateTime?: Date;
    day?: string;
    begG?: number;
    begB?: number;
    receivingG?: number;
    receivingB?: number;
    salesG?: number;
    salesB?: number;
}

export interface CreateBeginningEntryDto {
    productId?: number;
    receivedQty?: number;
}

export interface ApiResponseOfString {
    data: string;
    message?: string;
    isSuccess?: boolean;
    errors?: string[];
}

export interface ApiResponseOfCurrentInventoryV1Dto {
    data: CurrentInventoryV1Dto;
    message?: string;
    isSuccess?: boolean;
    errors?: string[];
}

export interface CurrentInventoryV1Dto {
    productId?: number;
    receivedQty?: number;
    salesQty?: number;
    begQty?: number;
    currentStocks?: number;
}

export interface CreateInventoryReconcillationDto {
    quantity?: number;
    productId?: number;
}

export interface ApiResponseOfPaginatedResultOfGetInventoryReconcillation {
    data: PaginatedResultOfGetInventoryReconcillation;
    message?: string;
    isSuccess?: boolean;
    errors?: string[];
}

export interface PaginatedResultOfGetInventoryReconcillation {
    items?: GetInventoryReconcillation[];
    totalCount?: number;
    totalPages?: number;
    currentPage?: number;
    pageSize?: number;
}

export interface GetInventoryReconcillation {
    productName?: string;
    quantity?: number;
    remarks?: string;
    isInventoryOpen?: boolean;
}

export interface PaginationParams {
    pageNumber?: number | undefined;
    pageSize?: number | undefined;
}

export interface GenericSearchParams extends PaginationParams {
    filterText?: string | undefined;
}

export interface GetInventoryReconcillationInput extends GenericSearchParams {
}

export interface ApiResponseOfListOfMachineDto {
    data: MachineDto[];
    message?: string;
    isSuccess?: boolean;
    errors?: string[];
}

export interface MachineDto {
    id?: number;
    description?: string;
}

export interface CreateOrEditMachineDto {
    id?: number | undefined;
    description?: string;
}

export interface ApiResponseOfCreateOrEditMachineDto {
    data: CreateOrEditMachineDto;
    message?: string;
    isSuccess?: boolean;
    errors?: string[];
}

export interface ApiResponseOfPaginatedResultOfGetMachineForDropDown {
    data: PaginatedResultOfGetMachineForDropDown;
    message?: string;
    isSuccess?: boolean;
    errors?: string[];
}

export interface PaginatedResultOfGetMachineForDropDown {
    items?: GetMachineForDropDown[];
    totalCount?: number;
    totalPages?: number;
    currentPage?: number;
    pageSize?: number;
}

export interface GetMachineForDropDown {
    id?: number;
    description?: string;
}

export interface ApiResponseOfGetMachineGenerationWTotal {
    data: GetMachineGenerationWTotal;
    message?: string;
    isSuccess?: boolean;
    errors?: string[];
}

export interface GetMachineGenerationWTotal {
    totalGood?: number;
    totalGoodPercentage?: number;
    getMachineGenerationV1Dtos?: GetMachineGenerationV1Dto[];
}

export interface GetMachineGenerationV1Dto {
    machineName?: string;
    good?: number;
    bad?: number;
}

export interface CreateNotificationDto {
    title?: string;
    desc?: string;
    redirectTo?: string | undefined;
}

export interface ApiResponseOfPaginatedResultOfGetNotificationDto {
    data: PaginatedResultOfGetNotificationDto;
    message?: string;
    isSuccess?: boolean;
    errors?: string[];
}

export interface PaginatedResultOfGetNotificationDto {
    items?: GetNotificationDto[];
    totalCount?: number;
    totalPages?: number;
    currentPage?: number;
    pageSize?: number;
}

export interface NotificationDto {
    id?: string;
    title?: string;
    description?: string;
    isRead?: boolean;
    sentTo?: string;
    creationTime?: Date;
}

export interface GetNotificationDto extends NotificationDto {
    sentToName?: string;
    strCreationTime?: string;
}

export interface ApiResponseOfBoolean {
    data: boolean;
    message?: string;
    isSuccess?: boolean;
    errors?: string[];
}

export interface ApiResponseOfInteger {
    data: number;
    message?: string;
    isSuccess?: boolean;
    errors?: string[];
}

export interface ApiResponseOfIListOfProductCategoryDto {
    data: ProductCategoryDto[];
    message?: string;
    isSuccess?: boolean;
    errors?: string[];
}

export interface ProductCategoryDto {
    id?: number | undefined;
    name: string;
}

export interface CreateProductV1Dto {
    id?: number | undefined;
    name?: string;
    daysTillExpiration?: number;
    price?: number;
    productCategories?: ProductCategoryDtoV1 | undefined;
}

export interface ProductCategoryDtoV1 {
    id?: number | undefined;
    name?: string;
}

export interface ApiResponseOfIListOfProductV1Dto {
    data: ProductV1Dto[];
    message?: string;
    isSuccess?: boolean;
    errors?: string[];
}

export interface ProductV1Dto {
    id?: number;
    name?: string;
    price?: number;
    prodCode?: string;
    daysTillExpiration?: number;
    productCategoriesDto?: ProductCategoryDto[];
}

export interface ApiResponseOfIListOfProductWithCategDto {
    data: ProductWithCategDto[];
    message?: string;
    isSuccess?: boolean;
    errors?: string[];
}

export interface ProductWithCategDto {
    productId?: number;
    productName?: string;
    productCategories?: string[];
}

export interface ApiResponseOfCreateProductV1Dto {
    data: CreateProductV1Dto;
    message?: string;
    isSuccess?: boolean;
    errors?: string[];
}

export interface ApiResponseOfPaginatedResultOfGetProductDropDownTableDto {
    data: PaginatedResultOfGetProductDropDownTableDto;
    message?: string;
    isSuccess?: boolean;
    errors?: string[];
}

export interface PaginatedResultOfGetProductDropDownTableDto {
    items?: GetProductDropDownTableDto[];
    totalCount?: number;
    totalPages?: number;
    currentPage?: number;
    pageSize?: number;
}

export interface GetProductDropDownTableDto {
    id?: number;
    name?: string;
    price?: number;
    showControl?: boolean;
}

export interface ApiResponseOfPaginatedResultOfGetProductDropDownTableV1Dto {
    data: PaginatedResultOfGetProductDropDownTableV1Dto;
    message?: string;
    isSuccess?: boolean;
    errors?: string[];
}

export interface PaginatedResultOfGetProductDropDownTableV1Dto {
    items?: GetProductDropDownTableV1Dto[];
    totalCount?: number;
    totalPages?: number;
    currentPage?: number;
    pageSize?: number;
}

export interface GetProductDropDownTableV1Dto {
    id?: number;
    name?: string;
    price?: number;
    currentStock?: number;
    showControl?: boolean;
}

export interface ApiResponseOfListOfCreateSalesDetailV1Dto {
    data: CreateSalesDetailV1Dto[];
    message?: string;
    isSuccess?: boolean;
    errors?: string[];
}

export interface CreateSalesDetailV1Dto {
    productId: number;
    quantity?: number;
    productPrice?: number | undefined;
    actualSellingPrice?: number | undefined;
    discount?: number | undefined;
    productName?: string | undefined;
}

export interface ApiResponseOfPaginatedResultOfProductCostDto {
    data: PaginatedResultOfProductCostDto;
    message?: string;
    isSuccess?: boolean;
    errors?: string[];
}

export interface PaginatedResultOfProductCostDto {
    items?: ProductCostDto[];
    totalCount?: number;
    totalPages?: number;
    currentPage?: number;
    pageSize?: number;
}

export interface ProductCostDto {
    id?: number;
    name?: string;
    amount?: number;
    isActive?: boolean;
    productId?: number;
}

export interface ApiResponseOfPaginatedResultOfGetProductCostingDto {
    data: PaginatedResultOfGetProductCostingDto;
    message?: string;
    isSuccess?: boolean;
    errors?: string[];
}

export interface PaginatedResultOfGetProductCostingDto {
    items?: GetProductCostingDto[];
    totalCount?: number;
    totalPages?: number;
    currentPage?: number;
    pageSize?: number;
}

export interface GetProductCostingDto {
    productName?: string;
    overallEstimatedCost?: number;
    productCosting?: ProductCosting[];
}

export interface ProductCosting {
    costName?: string;
    totalEstimatedCost?: number;
}

export interface CreateOrEditProductCostDto {
    id?: number | undefined;
    name?: string;
    amount?: number;
    productId?: number;
}

export interface ApiResponseOfViewGeneratedReportDto {
    data: ViewGeneratedReportDto;
    message?: string;
    isSuccess?: boolean;
    errors?: string[];
}

export interface ViewGeneratedReportDto {
    dateGenerated?: Date;
    totalSales?: number;
    totalExpenses?: number;
    totalEstimatedCost?: number;
    viewProductGeneratedReportDtos?: ViewProductGeneratedReportDto[];
}

export interface ViewProductGeneratedReportDto {
    productId?: number;
    productName?: string;
    sales?: ViewProdGenSales | undefined;
    generation?: ViewProdGenRecv | undefined;
    estCosting?: ViewProdEstCosting | undefined;
}

export interface ViewProdGenSales {
    totalQtySold?: number;
    totalSales?: number;
}

export interface ViewProdGenRecv {
    totalQtyGenerated?: number;
    averageGeneration?: number;
}

export interface ViewProdEstCosting {
    overallTotalCost?: number;
    viewProdEstCostingDetails?: ViewProdEstCostingDetails[];
}

export interface ViewProdEstCostingDetails {
    costName?: string;
    totalCost?: number;
}

export interface ApiResponseOfPaginatedResultOfSalesHeaderDto {
    data: PaginatedResultOfSalesHeaderDto;
    message?: string;
    isSuccess?: boolean;
    errors?: string[];
}

export interface PaginatedResultOfSalesHeaderDto {
    items?: SalesHeaderDto[];
    totalCount?: number;
    totalPages?: number;
    currentPage?: number;
    pageSize?: number;
}

export interface SalesHeaderDto {
    id?: string;
    totalAmount?: number;
    transNum?: string | undefined;
    transactionDate?: Date;
    soldBy?: string;
    customerName?: string;
    salesDetailsDto?: SalesDetailDto[];
    isInventoryClosed?: boolean | undefined;
}

export interface SalesDetailDto {
    productPrice?: number;
    quantity?: number;
    discount?: number;
    productName?: string;
    actualSellingPrice?: number;
    amount?: number;
}

export interface CreateOrEditSalesDto {
    salesHeaderId?: string | undefined;
    customerId?: string | undefined;
    createSalesDetailDtos: CreateSalesDetailDto[];
}

export interface CreateSalesDetailDto {
    transNumReaderDto: TransNumReaderDto;
    actualSellingPrice?: number;
    productPrice?: number;
    amount?: number;
    discount?: number;
}

export interface TransNumReaderDto {
    transNum?: string;
    quantity?: number;
}

export interface CreateOrEditSalesV1Dto {
    salesHeaderId?: string | undefined;
    customerName?: string;
    createSalesDetailV1Dto?: CreateSalesDetailV1Dto[];
}

export interface ApiResponseOfGetTotalSalesDto {
    data: GetTotalSalesDto;
    message?: string;
    isSuccess?: boolean;
    errors?: string[];
}

export interface GetTotalSalesDto {
    totalSales?: number;
    salesPercentage?: number;
    allSalesPercentage?: number[];
}

export interface ApiResponseOfListOfPerMonthSalesDto {
    data: PerMonthSalesDto[];
    message?: string;
    isSuccess?: boolean;
    errors?: string[];
}

export interface PerMonthSalesDto {
    month?: string;
    year?: string;
    salesPercentage?: number;
    totalMonthlySales?: number;
}

export interface ApiResponseOfPaginatedResultOfSalesSummaryWithEst {
    data: PaginatedResultOfSalesSummaryWithEst;
    message?: string;
    isSuccess?: boolean;
    errors?: string[];
}

export interface PaginatedResultOfSalesSummaryWithEst {
    items?: SalesSummaryWithEst[];
    totalCount?: number;
    totalPages?: number;
    currentPage?: number;
    pageSize?: number;
}

export interface SalesSummaryWithEst {
    totalSales?: number;
    dailySales?: number;
    totalEstimatedCost?: number;
    salesSummaryDtos?: SalesSummaryDto[];
}

export interface SalesSummaryDto {
    customerName?: string;
    soldBy?: string | undefined;
    transNum?: string | undefined;
    dateTime?: Date;
    productName?: string;
    quantity?: number;
    rate?: number;
    totalPrice?: number;
    currentInventory?: InventoryStatus;
}

export enum InventoryStatus {
    Open = 0,
    Closed = 1,
}

export interface ApiResponseOfPaginatedResultOfViewSalesHeaderDto {
    data: PaginatedResultOfViewSalesHeaderDto;
    message?: string;
    isSuccess?: boolean;
    errors?: string[];
}

export interface PaginatedResultOfViewSalesHeaderDto {
    items?: ViewSalesHeaderDto[];
    totalCount?: number;
    totalPages?: number;
    currentPage?: number;
    pageSize?: number;
}

export interface ViewSalesHeaderDto {
    transNum?: string;
    customerName?: string;
    soldById?: string;
    soldBy?: string;
    transDate?: Date;
    totalAmount?: number;
    finalTotalAmount?: number;
    discount?: number;
    viewSalesDetailDtos?: ViewSalesDetailDto[];
}

export interface ViewSalesDetailDto {
    itemName?: string;
    quantity?: number;
    rate?: number;
    amount?: number;
}

export interface CreateOrEditStocksReconciliationDto {
    id?: number | undefined;
    quantity?: number;
    transNum?: string;
    remarks?: string | undefined;
}

export interface CreateStocksReceivingDto {
    quantity: number;
    productId: number;
    storageLocationId: number;
    machineId: number;
}

export interface ApiResponseOfPaginatedResultOfGetAllStocksReceivingDto {
    data: PaginatedResultOfGetAllStocksReceivingDto;
    message?: string;
    isSuccess?: boolean;
    errors?: string[];
}

export interface PaginatedResultOfGetAllStocksReceivingDto {
    items?: GetAllStocksReceivingDto[];
    totalCount?: number;
    totalPages?: number;
    currentPage?: number;
    pageSize?: number;
}

export interface GetAllStocksReceivingDto {
    id?: string;
    productId?: number;
    transNum?: string;
    productName?: string;
    storageLocation?: string;
    quantity?: number;
    storageLocationId?: number;
    dateReceived?: string;
}

export interface ApiResponseOfListOfGetStocksGenerationDto {
    data: GetStocksGenerationDto[];
    message?: string;
    isSuccess?: boolean;
    errors?: string[];
}

export interface GetStocksGenerationDto {
    productName?: string;
    generatedQuantity?: number;
    baselineQuantity?: number;
    differentialPercentage?: number;
}

export interface CreateOrEditStorageLocationDto {
    id?: number | undefined;
    name?: string;
    description?: string;
}

export interface ApiResponseOfListOfGetStorageLocationForDropDownDto {
    data: GetStorageLocationForDropDownDto[];
    message?: string;
    isSuccess?: boolean;
    errors?: string[];
}

export interface GetStorageLocationForDropDownDto {
    id?: number;
    name?: string;
}

export interface ApiResponseOfUserLoginDto {
    data: UserLoginDto;
    message?: string;
    isSuccess?: boolean;
    errors?: string[];
}

export interface UserLoginDto {
    userId?: string;
    userName?: string;
    userToken?: string;
    newRefreshToken?: string;
    userRole?: string[];
}

export enum UserRoleEnum {
    Admin = 0,
    Cashier = 1,
    Inventory = 2,
    Owner = 3,
}

export interface LoginUserDto {
    userName?: string;
    password?: string;
}

export interface ApiResponseOfPaginatedResultOfGetVoidRequest {
    data: PaginatedResultOfGetVoidRequest;
    message?: string;
    isSuccess?: boolean;
    errors?: string[];
}

export interface PaginatedResultOfGetVoidRequest {
    items?: GetVoidRequest[];
    totalCount?: number;
    totalPages?: number;
    currentPage?: number;
    pageSize?: number;
}

export interface VoidRequestDto {
    id?: string;
    status?: VoidRequestStatus;
    salesHeaderId?: string | undefined;
    approverId?: string | undefined;
}

export interface GetVoidRequest extends VoidRequestDto {
    transNum?: string;
    approverName?: string;
    requesterName?: string;
    dateRequested?: string;
    strStatus?: string;
    createdBy?: string;
    creationTime?: Date;
}

export enum VoidRequestStatus {
    Pending = 0,
    Inprogress = 1,
    Accepted = 2,
    Declined = 3,
}

export interface FileResponse {
    data: Blob;
    status: number;
    fileName?: string;
    headers?: { [name: string]: any };
}